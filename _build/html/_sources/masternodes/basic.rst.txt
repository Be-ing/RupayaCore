.. meta::
   :description: This guide describes how to set up a Rupaya masternode. It also describes various options for hosting and different wallets
   :keywords: rupaya, rupx, guide, masternodes

.. _basic_setup:
.. |br| raw:: html

	<br>


===========
Basic-Setup
===========

Rupaya Hot + Cold wallet MasterNode setup guide
===============================================

	This guide will walk you through the bare minimum steps required to setup a Rupaya MasterNode (MN) on a Linux server and to setup a Cold Wallet on a Windows or Mac computer.  This guide is intended for those that want to get the MN up and running without configuring additional security measures or best practices.  For those that want to take the time to configure additional security measures and best practices, we recommend using the Advanced Setup Guide.
	
	This guide assumes that you have a basic understanding of how to navigate the Linux OS for the setup of the MasterNode.  This guide also assumes that you have an understanding of either a Windows or Mac OS for the setup of the Cold Wallet. 
	

VPS and Hot Wallet Setup:
-------------------------
	In this section of the guide, you will be completing the following steps:
	#. Identify a VPS provider and order a Linux Ubuntu 16.04 server
	#. Login to the VPS via SSH
	#. Configure a virtual swap space on the VPS to avoid running out of memory
	#. Configure the VPS internal firewall to allow SSH port 22 and the Rupaya Wallet port 9050
	#. Install the Rupaya Hot Wallet on the VPS
	#. Update the Hot Wallet configuration file on the VPS
	#. Start the Hot Wallet and generate a masternodeprivkey (aka GenKey)
	#. Verify the Hot Wallet is synchronizing with the blockchain

Cold Wallet Setup:
------------------
	In this section of the guide, you will be completing the following steps:
	#. Install and open the Rupaya-Qt wallet on your machine.
	#. Create a receiving address for the MasterNode collateral funds
	#. Send EXACTLY 20000 RUPX coins to the address you just copied
	#. Open the debug console of the wallet in order to type a few commands
	#. Run `masternode outputs` command to retrieve the transaction ID of the collateral transfer
	#. Go to `Tools` -> `Open MasterNode Configuration File` and add a line in the newly opened `masternode.conf` file
	#. Restart the Qt wallet to pick up the `masternode.conf` changes.
	#. Go to MasterNodes tab and check if your newly added masternode is listed
	#. Enable the MasterNode
	#. Verify that the MasterNode is enabled and contributing to the network

SECURITY DISCLAIMER
-------------------
	It's very common in this industry for scammers to offer "help" via remote screen sharing(TeamViewer, Skype, Zoom, WebEx, etc).
	They will use nicknames like `MasterNode Helper`, `MasterNode Support`, `Cryptopia Support` and will be very nice and helpful to you. At least until they manage to run a command like `dumpprivkey`, `sendtoaddress` and your funds will be gone, adios, sayonara.
	Please be aware and stay safe!

---

Setup overview
==============

Hot Wallet
----------
In this guide, we refer to **Hot** wallet as the Rypaya wallet, running on Linux or Windows VPS, that is running the MasterNode server.  The VPS requires a public IP address statically configured on it.  The Hot wallet provides services to the blockchain network for which it's rewarded with coins.
It's referred to as **Hot** because it's connected to and running on the public internet 24/7, directly accessible on the peer-to-peer port (TCP **9050**).  Because this wallet is always running, it is much more vulnerable to attack than a **Cold** wallet.  
This is why is is highly recommended to use a Cold wallet to receive the MN rewards. 

It's strongly recommended to run the MasterNode Hot wallet on a VPS and not at home! See a list of reasons [here](mn_dont_do_this_at_home.md).

Cold Wallet
-----------
On the other side, the **Cold** wallet, running on Windows, OSX, or Linux, holds the RUPX collateral (**20,000** RUPX).  The Cold wallet is used to enable the MasterNode server and collect rewards for its services.

This is normally run at home, behind a firewall, on a Windows, OSX or Linux computer.  After the MasterNode is enabled it can even be run without direct connectivity from the internet, making it a more secure wallet. Once the MasterNode is enabled, the local wallet can then be closed and the MasterNode rewards will still show up the next time the wallet is started and synced.

---

We are going to setup the Hot wallet first. This will reduce the overall time as the Hot wallet will sync with the blockchain while we setup the Cold wallet. It also requires less back-and-forth between the two.

**Hot** Wallet - MasterNode VPS Setup(Part 1) with Linux CLI only wallet
========================================================================
This will run 24/7 and provide services to the network via TCP port **9050** for which it will be rewarded with coins. It will run with an empty wallet reducing the risk of loosing the funds in the event of an attack.

VPS Setup
-----------

#. Order and setup a VPS server from a provider like DigitalOcean, Vultr, Linode, Amazon AWS, etc.  It's important not to run the VPS at home because of the risk of network instability that could cause loss of connectivity to the server.

	**VPS Requirements**
	
	* Linux 64 bit, (e.g. Ubuntu 16.04)
	* Dedicated Public IP Address
	* Recommended at least 1GB of RAM and 20GB of disk space
	* Basic Linux skills

	
	You can get servers like this for $5 a month and can run 3 to 4 MasterNode wallets, from different coins, if the monthly cost is a concern.

#. Login via SSH into the server and type the following command in the console as root:

	If you are using Windows, [PuTTY](https://putty.org) is a very good SSH client that you can use to connect to a remote Linux server.
	If you are running a VPS from Vultr or similar, you need to use SSH such as putty if you want to copy and paste these commands otherwise you will have to type them all out!

#. Configure swap to avoid running out of memory if you don't have a swap :

	**fallocate -l 3000M /mnt/3000MB.swap** |br|	
	**dd if=/dev/zero of=/mnt/3000MB.swap bs=1024 count=3072000** |br|
	**mkswap /mnt/3000MB.swap** |br|
	**swapon /mnt/3000MB.swap** |br|
	**chmod 600 /mnt/3000MB.swap** |br|
	**echo '/mnt/3000MB.swap  none  swap  sw 0  0' >> /etc/fstab**
	
#. Allow SSH and MasterNode p2p communication port through the OS firewall:

	**ufw allow 22/tcp** |br|	
	**ufw limit 22/tcp** |br|	
	**ufw allow 9050/tcp** |br|	
	**ufw logging on** |br|	
	**ufw --force enable**

#. If you are running the MasterNode server in Amazon AWS or if additional firewalls are in place, you need to allow incoming connections on port TCP **9050** from any IP address.

Download and Configure the Rupaya Hot Wallet
--------------------------------------------

#. Install the Rupaya CLI wallet. Always download the latest [release available](https://github.com/rupaya-project/rupaya/releases), unpack it


#. Download and unpack the Rupaya wallet binaries by running the following commands:

	**wget https://s3-us-west-2.amazonaws.com/rupayax/75.1/linux-x64.tar.gz**  |br|	
	**sudo tar xvzf linux-x64.tar.gz -C /usr/local/bin/**

#. Start the service.  When the service starts, it will create the initial data directory(`/root/.rupayacore/`).

	**rupayad -daemon**

#. Wait a few seconds then run this command to generate the masternode private key (aka GenKey):

	**rupaya-cli masternode genkey**

#. Copy and save the output from the previous command to be used later in the process.  The value returned should look similar to the below example:

	**87LBTcfgkepEddWNFrJcut76rFp9wQG6rgbqPhqHWGvy13A9hJK**

#. Edit the MasterNode Hot wallet configuration file:

	**nano /root/.rupayacore/rupaya.conf**

#. Copy the following template and update the configuration data accordingly.  All variables that need to be updated manually are identified with the <> symbols around them.

	**rpcuser=rupayarpc** |br|
	**rpcpassword=<alphanumeric_rpc_password>** |br|
	**rpcport=7020** |br|
	**rpcallowip=127.0.0.1** |br|
	**rpcconnect=127.0.0.1** |br|
	**rpcbind=127.0.0.1** |br|
	**maxconnections=512** |br|
	**listen=1** |br|
	**daemon=1** |br|
	**externalip=<public_mn_ip_address_here>:9050** |br|
	**masternodeaddr=<public_mn_ip_address_here>:9050** |br|
	**bind=<public_mn_ip_address_here>** |br|
	**masternode=1** |br|
	**masternodeprivkey=<public_mn_ip_address_here>** |br|
	**addnode=rupx.seeds.mn.zone** |br|
	**addnode=rupx.mnseeds.com** |br|
	**addnode=104.248.58.227:9050** |br|
	**addnode=142.93.247.186:9050** |br|
	**addnode=104.238.146.167:9050** |br|
	**addnode=206.189.6.102:9050** |br|
	**addnode=178.128.225.48:9050** |br|
	**addnode=128.199.204.114:9050** |br|
	**addnode=139.59.80.208:9050** |br|
	**addnode=34.221.226.22:9050** |br|
	**addnode=159.89.236.115:9050** |br|
	**addnode=54.71.156.120:9050** |br|
	**addnode=45.55.32.108:9050** |br|
	**addnode=178.238.230.212:9050** |br|
	**addnode=159.65.251.235:9050** |br|
	**addnode=144.202.33.21:9050** |br|
	**addnode=207.246.116.61:9050** |br|
	**addnode=140.82.24.203:9050** |br|

	#update the variable after rpcpassword= with a 40 character RPC rpcpassword.  You will need to generate this password yourself. |br|
	#update the variable after externalip= with your Linux VPS IP |br|
	#update the variable after masternodeaddr= with your Linux VPS IP |br|
	#update the variable after masternodeprivkey= with your GenKey |br|
	
	You can right click in SSH (putty) to paste all of the above into the rupaya.conf configuration file.

#. Exit the editor by typing CTRL+X and hit Y + ENTER to commit your changes.

	This is a real example of what the configuration file should look like when you are done updating the variables:

	**rpcuser=rupxuser** |br|
	**rpcpassword=someSUPERsecurePASSWORD3746375620** |br|
	**rpcport=7020** |br|
	**rpcallowip=127.0.0.1** |br|
	**rpcconnect=127.0.0.1** |br|
	**rpcbind=127.0.0.1** |br|
	**maxconnections=512** |br|
	**listen=1** |br|
	**daemon=1** |br|
	**masternode=1** |br|
	**externalip=199.247.10.25:9050** |br|
	**masternodeaddr=199.247.10.25:9050** |br|
	**masternodeprivkey=87LBTcfgkepEddWNFrJcut76rFp9wQG6rgbqPhqHWGvy13A9hJK** |br|
	**addnode=rupx.seeds.mn.zone** |br|
	**addnode=rupx.mnseeds.com** |br|
	**addnode=104.248.58.227:9050** |br|
	**addnode=142.93.247.186:9050** |br|
	**addnode=104.238.146.167:9050** |br|
	**addnode=206.189.6.102:9050** |br|
	**addnode=178.128.225.48:9050** |br|
	**addnode=128.199.204.114:9050** |br|
	**addnode=139.59.80.208:9050** |br|
	**addnode=34.221.226.22:9050** |br|
	**addnode=159.89.236.115:9050** |br|
	**addnode=54.71.156.120:9050** |br|
	**addnode=45.55.32.108:9050** |br|
	**addnode=178.238.230.212:9050** |br|
	**addnode=159.65.251.235:9050** |br|
	**addnode=144.202.33.21:9050** |br|
	**addnode=207.246.116.61:9050** |br|
	**addnode=140.82.24.203:9050**

	The IP address (`199.247.10.25` in this example) will be different for you. Use the `ifconfig` command to find out your IP address, normally the address of the `eth0` interface. We are going to use this IP and port (9050) in the Cold Wallet setup(Step 2) as well. |br|

#. Stop the wallet and wait 2 minutes before attempting a start:

	**rupaya-cli stop && sleep 120** |br|
	**rupayad -daemon**


#. Verify that the wallet is synching the blockchain:
	
	Run this command to make sure that you see active connections.
	
	**rupaya-cli getinfo**
	
	Run this command every few mins until you see the blocks increasing.
	
	**rupaya-cli getblockcount**

	We can now go to the next step while this wallet syncs up with the network and gets social with the other MasterNodes.


---


**Cold** Wallet Setup(Part 2) using the Qt GUI wallet on Windows, OSX, etc
==========================================================================

Requirements:
-------------
* Windows 7 or higher, Mac OS or Linux
* Outgoing internet access to sync the blockchain and enable the MasterNode remotely

This is the wallet where the MasterNode collateral will have to be transferred and stored. After the setup is complete, this wallet doesn't have to run 24/7 and will be the one receiving the rewards.

Install the Rupaya Cold Wallet
------------------------------

#. Install and open the Rupaya-Qt wallet on your machine.

 * If you have a previous Rupaya wallet installed, backup the `wallet.dat`, uninstall it then delete its original data directory.
 * Download the newest Rupaya Qt wallet from: https://github.com/rupaya-project/rupaya/releases
 * The Windows wallet needs to be extracted to a permanent location, OSX Wallet goes into `Applications`
 * Start the wallet software and ignore the unidentified developer warning
 * If you are prompted to Allow Access by the firewall, do so
 * Let the wallet sync until you see this in the bottom right corner of your Wallet ![Wallet Sync Completed](images/qt-wallet-sync.png "Wallet Sync Completed")
 * If the wallet is not synching, add this line in the configuration file:
 
	**addnode=seeds.rupx.io**

	The Qt wallet will open the configuration from `Tools` > `Open Wallet Configuration File`. Restart the wallet every time you update the configuration.

Create a new MN wallet address and send it the required burn coins
 ------------------------------------------------------------------
 
#. Create a receiving address for the MasterNode collateral funds.

   Go to File -> Receiving addresses...
   
   Click **New**, type in a label and press **Ok**.

	![Create Collateral Address](images/qt-wallet-new-collateral-address.png "Create Collateral Address")

	Select the row of the newly added address and click **Copy** to store the destination address in the clipboard.

#. Send EXACTLY 20000 RUPX coins to the address you just copied. Double check you've got the correct address before transferring the funds.
	If you are sending from an exchange, make sure you account for the withdrawal fee so that you get EXACTLY EXACTLY EXACTLY 20000 RUPX in. This is a common error that will cause the next step to not give you the transaction id needed later on. 
	For example, to withdraw from `Stocks.Exchange` the exact ammount for a MasterNode, you need to specify the ammount of **20000.001** to account for the fee.

	After sending, you can verify the balance in the Transactions tab. This can take **a few minutes** to be confirmed by the network. Go get a glass of water. No alcoholic beverages please, we are not out of the woods yet.

Output your MN TXhash and Outputidx and update the MasterNode configuration file
--------------------------------------------------------------------------------

#. Open the debug console of the wallet in order to type a few commands. 

	Go to `Tools` -> `Debug console`

#. Run the `masternode outputs` command to retrieve the transaction ID of the collateral transfer.

	**masternode outputs** |br|
	
	You should see an output that looks like this:
   
	'"txhash" : "c19972e47d2a77d3ff23c2dbd8b2b204f9a64a46fed0608ce57cf76ba9216487",'
	'"outputidx" : 1'

#. Copy and save the above values.  Both the `txhash` and `outputidx` will be used in the next step. The `outputidx` will be either a `0` or `1`, both are valid values.

#. Go to `Tools` -> `Open MasterNode Configuration File` and add a line in the newly opened `masternode.conf` file. 

	If you get prompted to choose a program, select a text editor like Notepad/TextEdit to open it.

	These are the default directories for the data directory where this file is stored: |br|
	**Mac: ~/Library/Application Support/Rupaya** |br|
	**Windows: ~\AppData\Roaming\Rupayacore**

	Below is an example of what you need in the `masternode.conf` file, all on a single line with no carriage returns.  The file contains an example that is commented out(with a # in front). Read it if it helps. Based on the output from the `masternode outputs` command, I would add this line in:

	**MN1 199.247.10.25:9050 87LBTcfgkepEddWNFrJcut76rFp9wQG6rgbqPhqHWGvy13A9hJK c19972e47d2a77d3ff23c2dbd8b2b204f9a64a46fed0608ce57cf76ba9216487 1** |br|

	* `MN1` is the node's alias. |br|
	* `199.247.10.25` is the external IP of the masternode server that will provide services to the network. |br|
	* `87LBTcfgkepEddWNFrJcut76rFp9wQG6rgbqPhqHWGvy13A9hJK` is your masternode private key (aka GenKey) from (Part 1), the value used for `masternodeprivkey` in `/root/.rupayacore/rupaya.conf`. |br|
	* `c19972e47d2a77d3ff23c2dbd8b2b204f9a64a46fed0608ce57cf76ba9216487` is your TXhash from `masternode outputs`. |br|
	* `1` is your 'outputidx' (aka Index) from `masternode outputs`.

#. Restart the Qt wallet to pick up the `masternode.conf` changes.

#. Go to MasterNodes tab and check if your newly added masternode is listed.

	If you want to control multiple MN Hot wallets from this Cold wallet, you will need to repeat the previous 2-7 steps. The `masternode.conf` file will contain an entry for each masternode that will be added to the network.

#. Verify that the output from the `masternode list-conf` command matches what you entered in the `masternode.conf` file.

	Open `Tools` > `Debug console`.

	Type this command to see all the MasterNodes loaded from the `masternode.conf` file with their current status:

	**masternode list-conf**

	You should now see the newly added MasterNode with a status of `MISSING`.

Starting the MN from the Cold Wallet
====================================

	**CRITICAL NOTE:** It is very important that you let the MasterNode Hot wallet synchronize for a couple of hours prior to starting it from the Cold wallet.  If you attempt to start it before it is fully synchronized then it will fail.
	
#. Run the following command, in the Cold Wallet debug console, in order to enable it:

	**startmasternode alias false MN1**

	In the example above, the alias of my MasterNode was MN1, in your case, it might be different.

Verify that the MasterNode is enabled and contributing to the network
=====================================================================

#. Switch back to the MasterNode console.
	Give it a few minutes and go to the Linux VPS console and check the status of the masternode with this command:

	**rupaya-cli masternode status**

	If you see status `Not capable masternode: Hot node, waiting for remote activation`, you need to wait a bit longer for the blockchain to reach consensus. It's common to take 30 to 90 minutes before activation can be done.

	If you see status `MasterNode successfully started`, you've done it, congratulations. Go hug someone now :)
	It will take a few hours until the first rewards start coming in.

	You should now be able to see your MasterNode(s) **ENABLED** on this web page: [http://mn.rupx.io](http://mn.rupx.io)

	Cheers !